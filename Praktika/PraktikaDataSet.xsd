<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PraktikaDataSet" targetNamespace="http://tempuri.org/PraktikaDataSet.xsd" xmlns:mstns="http://tempuri.org/PraktikaDataSet.xsd" xmlns="http://tempuri.org/PraktikaDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="PraktikaConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="PraktikaConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Praktika.Properties.Settings.GlobalReference.Default.PraktikaConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupTableAdapter" GeneratorDataComponentClassName="GroupTableAdapter" Name="Group" UserDataComponentName="GroupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PraktikaConnectionString (Settings)" DbObjectName="Praktika.dbo.[Group]" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Group] WHERE (([id] = @Original_id) AND ((@IsNull_year_of_graduation = 1 AND [year_of_graduation] IS NULL) OR ([year_of_graduation] = @Original_year_of_graduation)) AND ((@IsNull_id_teacher = 1 AND [id_teacher] IS NULL) OR ([id_teacher] = @Original_id_teacher)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_year_of_graduation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year_of_graduation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_year_of_graduation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year_of_graduation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_teacher" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Group] ([name], [year_of_graduation], [photo_g], [id_teacher]) VALUES (@name, @year_of_graduation, @photo_g, @id_teacher);
SELECT id, name, year_of_graduation, photo_g, id_teacher FROM [Group] WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@year_of_graduation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year_of_graduation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo_g" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo_g" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, name, year_of_graduation, photo_g, id_teacher FROM dbo.[Group]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Group] SET [name] = @name, [year_of_graduation] = @year_of_graduation, [photo_g] = @photo_g, [id_teacher] = @id_teacher WHERE (([id] = @Original_id) AND ((@IsNull_year_of_graduation = 1 AND [year_of_graduation] IS NULL) OR ([year_of_graduation] = @Original_year_of_graduation)) AND ((@IsNull_id_teacher = 1 AND [id_teacher] IS NULL) OR ([id_teacher] = @Original_id_teacher)));
SELECT id, name, year_of_graduation, photo_g, id_teacher FROM [Group] WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@year_of_graduation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year_of_graduation" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo_g" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo_g" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_teacher" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_year_of_graduation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year_of_graduation" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_year_of_graduation" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="year_of_graduation" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_teacher" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_teacher" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_teacher" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="Praktika.dbo.[Group]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="year_of_graduation" DataSetColumn="year_of_graduation" />
              <Mapping SourceColumn="photo_g" DataSetColumn="photo_g" />
              <Mapping SourceColumn="id_teacher" DataSetColumn="id_teacher" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Stud_groupTableAdapter" GeneratorDataComponentClassName="Stud_groupTableAdapter" Name="Stud_group" UserDataComponentName="Stud_groupTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PraktikaConnectionString (Settings)" DbObjectName="Praktika.dbo.Stud_group" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Stud_group] WHERE (([id] = @Original_id) AND ((@IsNull_id_student = 1 AND [id_student] IS NULL) OR ([id_student] = @Original_id_student)) AND ((@IsNull_id_group = 1 AND [id_group] IS NULL) OR ([id_group] = @Original_id_group)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_group" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_group" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Stud_group] ([id_student], [id_group]) VALUES (@id_student, @id_group);
SELECT id, id_student, id_group FROM Stud_group WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_group" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, id_student, id_group FROM dbo.Stud_group</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Stud_group] SET [id_student] = @id_student, [id_group] = @id_group WHERE (([id] = @Original_id) AND ((@IsNull_id_student = 1 AND [id_student] IS NULL) OR ([id_student] = @Original_id_student)) AND ((@IsNull_id_group = 1 AND [id_group] IS NULL) OR ([id_group] = @Original_id_group)));
SELECT id, id_student, id_group FROM Stud_group WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@id_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_group" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_student" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_student" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_id_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_group" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id_group" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id_group" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="Praktika.dbo.Stud_group" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="id_student" DataSetColumn="id_student" />
              <Mapping SourceColumn="id_group" DataSetColumn="id_group" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="StudentTableAdapter" GeneratorDataComponentClassName="StudentTableAdapter" Name="Student" UserDataComponentName="StudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PraktikaConnectionString (Settings)" DbObjectName="Praktika.dbo.Student" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Student] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Student] ([surname], [photo_s]) VALUES (@surname, @photo_s);
SELECT id, surname, photo_s FROM Student WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo_s" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo_s" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, surname, photo_s FROM dbo.Student</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Student] SET [surname] = @surname, [photo_s] = @photo_s WHERE (([id] = @Original_id));
SELECT id, surname, photo_s FROM Student WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo_s" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo_s" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="Praktika.dbo.Student" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="surname" DataSetColumn="surname" />
              <Mapping SourceColumn="photo_s" DataSetColumn="photo_s" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeacherTableAdapter" GeneratorDataComponentClassName="TeacherTableAdapter" Name="Teacher" UserDataComponentName="TeacherTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PraktikaConnectionString (Settings)" DbObjectName="Praktika.dbo.Teacher" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teacher] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teacher] ([surname], [photo_t]) VALUES (@surname, @photo_t);
SELECT id, surname, photo_t FROM Teacher WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo_t" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo_t" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, surname, photo_t FROM dbo.Teacher</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teacher] SET [surname] = @surname, [photo_t] = @photo_t WHERE (([id] = @Original_id));
SELECT id, surname, photo_t FROM Teacher WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo_t" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo_t" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="Praktika.dbo.Teacher" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="surname" DataSetColumn="surname" />
              <Mapping SourceColumn="photo_t" DataSetColumn="photo_t" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TESTPHOTOTableAdapter" GeneratorDataComponentClassName="TESTPHOTOTableAdapter" Name="TESTPHOTO" UserDataComponentName="TESTPHOTOTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="PraktikaConnectionString (Settings)" DbObjectName="Praktika.dbo.TESTPHOTO" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TESTPHOTO] WHERE (([id] = @Original_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TESTPHOTO] ([text], [photo]) VALUES (@text, @photo);
SELECT id, text, photo FROM TESTPHOTO WHERE (id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@text" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT id, text, photo FROM dbo.TESTPHOTO</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TESTPHOTO] SET [text] = @text, [photo] = @photo WHERE (([id] = @Original_id));
SELECT id, text, photo FROM TESTPHOTO WHERE (id = @id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@text" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="text" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Binary" Direction="Input" ParameterName="@photo" Precision="0" ProviderType="VarBinary" Scale="0" Size="0" SourceColumn="photo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="id" ColumnName="id" DataSourceName="Praktika.dbo.TESTPHOTO" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="id" DataSetColumn="id" />
              <Mapping SourceColumn="text" DataSetColumn="text" />
              <Mapping SourceColumn="photo" DataSetColumn="photo" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PraktikaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="PraktikaDataSet" msprop:Generator_DataSetName="PraktikaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Group" msprop:Generator_RowEvHandlerName="GroupRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupRowDeleted" msprop:Generator_RowDeletingName="GroupRowDeleting" msprop:Generator_RowEvArgName="GroupRowChangeEvent" msprop:Generator_TablePropName="Group" msprop:Generator_RowChangedName="GroupRowChanged" msprop:Generator_RowChangingName="GroupRowChanging" msprop:Generator_TableClassName="GroupDataTable" msprop:Generator_RowClassName="GroupRow" msprop:Generator_TableVarName="tableGroup" msprop:Generator_UserTableName="Group">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_UserColumnName="name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="year_of_graduation" msprop:Generator_ColumnPropNameInRow="year_of_graduation" msprop:Generator_ColumnPropNameInTable="year_of_graduationColumn" msprop:Generator_ColumnVarNameInTable="columnyear_of_graduation" msprop:Generator_UserColumnName="year_of_graduation" type="xs:int" minOccurs="0" />
              <xs:element name="photo_g" msprop:Generator_ColumnPropNameInRow="photo_g" msprop:Generator_ColumnPropNameInTable="photo_gColumn" msprop:Generator_ColumnVarNameInTable="columnphoto_g" msprop:Generator_UserColumnName="photo_g" type="xs:base64Binary" minOccurs="0" />
              <xs:element name="id_teacher" msprop:Generator_ColumnPropNameInRow="id_teacher" msprop:Generator_ColumnPropNameInTable="id_teacherColumn" msprop:Generator_ColumnVarNameInTable="columnid_teacher" msprop:Generator_UserColumnName="id_teacher" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Stud_group" msprop:Generator_RowEvHandlerName="Stud_groupRowChangeEventHandler" msprop:Generator_RowDeletedName="Stud_groupRowDeleted" msprop:Generator_RowDeletingName="Stud_groupRowDeleting" msprop:Generator_RowEvArgName="Stud_groupRowChangeEvent" msprop:Generator_TablePropName="Stud_group" msprop:Generator_RowChangedName="Stud_groupRowChanged" msprop:Generator_RowChangingName="Stud_groupRowChanging" msprop:Generator_TableClassName="Stud_groupDataTable" msprop:Generator_RowClassName="Stud_groupRow" msprop:Generator_TableVarName="tableStud_group" msprop:Generator_UserTableName="Stud_group">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="id_student" msprop:Generator_ColumnPropNameInRow="id_student" msprop:Generator_ColumnPropNameInTable="id_studentColumn" msprop:Generator_ColumnVarNameInTable="columnid_student" msprop:Generator_UserColumnName="id_student" type="xs:int" minOccurs="0" />
              <xs:element name="id_group" msprop:Generator_ColumnPropNameInRow="id_group" msprop:Generator_ColumnPropNameInTable="id_groupColumn" msprop:Generator_ColumnVarNameInTable="columnid_group" msprop:Generator_UserColumnName="id_group" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Student" msprop:Generator_RowEvHandlerName="StudentRowChangeEventHandler" msprop:Generator_RowDeletedName="StudentRowDeleted" msprop:Generator_RowDeletingName="StudentRowDeleting" msprop:Generator_RowEvArgName="StudentRowChangeEvent" msprop:Generator_TablePropName="Student" msprop:Generator_RowChangedName="StudentRowChanged" msprop:Generator_RowChangingName="StudentRowChanging" msprop:Generator_TableClassName="StudentDataTable" msprop:Generator_RowClassName="StudentRow" msprop:Generator_TableVarName="tableStudent" msprop:Generator_UserTableName="Student">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="surname" msprop:Generator_ColumnPropNameInRow="surname" msprop:Generator_ColumnPropNameInTable="surnameColumn" msprop:Generator_ColumnVarNameInTable="columnsurname" msprop:Generator_UserColumnName="surname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="photo_s" msprop:Generator_ColumnPropNameInRow="photo_s" msprop:Generator_ColumnPropNameInTable="photo_sColumn" msprop:Generator_ColumnVarNameInTable="columnphoto_s" msprop:Generator_UserColumnName="photo_s" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teacher" msprop:Generator_RowEvHandlerName="TeacherRowChangeEventHandler" msprop:Generator_RowDeletedName="TeacherRowDeleted" msprop:Generator_RowDeletingName="TeacherRowDeleting" msprop:Generator_RowEvArgName="TeacherRowChangeEvent" msprop:Generator_TablePropName="Teacher" msprop:Generator_RowChangedName="TeacherRowChanged" msprop:Generator_RowChangingName="TeacherRowChanging" msprop:Generator_TableClassName="TeacherDataTable" msprop:Generator_RowClassName="TeacherRow" msprop:Generator_TableVarName="tableTeacher" msprop:Generator_UserTableName="Teacher">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="surname" msprop:Generator_ColumnPropNameInRow="surname" msprop:Generator_ColumnPropNameInTable="surnameColumn" msprop:Generator_ColumnVarNameInTable="columnsurname" msprop:Generator_UserColumnName="surname" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="photo_t" msprop:Generator_ColumnPropNameInRow="photo_t" msprop:Generator_ColumnPropNameInTable="photo_tColumn" msprop:Generator_ColumnVarNameInTable="columnphoto_t" msprop:Generator_UserColumnName="photo_t" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TESTPHOTO" msprop:Generator_RowEvHandlerName="TESTPHOTORowChangeEventHandler" msprop:Generator_RowDeletedName="TESTPHOTORowDeleted" msprop:Generator_RowDeletingName="TESTPHOTORowDeleting" msprop:Generator_RowEvArgName="TESTPHOTORowChangeEvent" msprop:Generator_TablePropName="TESTPHOTO" msprop:Generator_RowChangedName="TESTPHOTORowChanged" msprop:Generator_RowChangingName="TESTPHOTORowChanging" msprop:Generator_TableClassName="TESTPHOTODataTable" msprop:Generator_RowClassName="TESTPHOTORow" msprop:Generator_TableVarName="tableTESTPHOTO" msprop:Generator_UserTableName="TESTPHOTO">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="id" msprop:Generator_ColumnPropNameInTable="idColumn" msprop:Generator_ColumnVarNameInTable="columnid" msprop:Generator_UserColumnName="id" type="xs:int" />
              <xs:element name="text" msprop:Generator_ColumnPropNameInRow="text" msprop:Generator_ColumnPropNameInTable="textColumn" msprop:Generator_ColumnVarNameInTable="columntext" msprop:Generator_UserColumnName="text" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="photo" msprop:Generator_ColumnPropNameInRow="photo" msprop:Generator_ColumnPropNameInTable="photoColumn" msprop:Generator_ColumnVarNameInTable="columnphoto" msprop:Generator_UserColumnName="photo" type="xs:base64Binary" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Group" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Stud_group_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Stud_group" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Student_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Student" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="Teacher_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teacher" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
    <xs:unique name="TESTPHOTO_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TESTPHOTO" />
      <xs:field xpath="mstns:id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Group_Teacher" msdata:parent="Teacher" msdata:child="Group" msdata:parentkey="id" msdata:childkey="id_teacher" msprop:Generator_UserParentTable="Teacher" msprop:Generator_UserChildTable="Group" msprop:Generator_RelationVarName="relationFK_Group_Teacher" msprop:Generator_UserRelationName="FK_Group_Teacher" msprop:Generator_ChildPropName="GetGroupRows" msprop:Generator_ParentPropName="TeacherRow" />
      <msdata:Relationship name="FK_Stud_group_Group" msdata:parent="Group" msdata:child="Stud_group" msdata:parentkey="id" msdata:childkey="id_group" msprop:Generator_UserParentTable="Group" msprop:Generator_UserChildTable="Stud_group" msprop:Generator_RelationVarName="relationFK_Stud_group_Group" msprop:Generator_ChildPropName="GetStud_groupRows" msprop:Generator_ParentPropName="GroupRow" msprop:Generator_UserRelationName="FK_Stud_group_Group" />
      <msdata:Relationship name="FK_Stud_group_Student" msdata:parent="Student" msdata:child="Stud_group" msdata:parentkey="id" msdata:childkey="id_student" msprop:Generator_UserParentTable="Student" msprop:Generator_UserChildTable="Stud_group" msprop:Generator_RelationVarName="relationFK_Stud_group_Student" msprop:Generator_UserRelationName="FK_Stud_group_Student" msprop:Generator_ChildPropName="GetStud_groupRows" msprop:Generator_ParentPropName="StudentRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>